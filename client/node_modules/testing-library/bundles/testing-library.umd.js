(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('testing-library', ['exports', '@angular/core'], factory) :
    (factory((global['testing-library'] = {}),global.ng.core));
}(this, (function (exports,i0) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var TestingLibraryService = (function () {
        function TestingLibraryService() {
        }
        TestingLibraryService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] },
        ];
        /** @nocollapse */
        TestingLibraryService.ctorParameters = function () { return []; };
        /** @nocollapse */ TestingLibraryService.ngInjectableDef = i0.defineInjectable({ factory: function TestingLibraryService_Factory() { return new TestingLibraryService(); }, token: TestingLibraryService, providedIn: "root" });
        return TestingLibraryService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var TestingLibraryComponent = (function () {
        function TestingLibraryComponent() {
        }
        /**
         * @return {?}
         */
        TestingLibraryComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        TestingLibraryComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'NgxMat-TestingLibrary',
                        template: "\n    <p>\n      testing-library works!\n    </p>\n  ",
                        styles: []
                    },] },
        ];
        /** @nocollapse */
        TestingLibraryComponent.ctorParameters = function () { return []; };
        return TestingLibraryComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var TestingLibraryModule = (function () {
        function TestingLibraryModule() {
        }
        TestingLibraryModule.decorators = [
            { type: i0.NgModule, args: [{
                        imports: [],
                        declarations: [TestingLibraryComponent],
                        exports: [TestingLibraryComponent]
                    },] },
        ];
        return TestingLibraryModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    exports.TestingLibraryService = TestingLibraryService;
    exports.TestingLibraryComponent = TestingLibraryComponent;
    exports.TestingLibraryModule = TestingLibraryModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdGluZy1saWJyYXJ5LnVtZC5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vdGVzdGluZy1saWJyYXJ5L2xpYi90ZXN0aW5nLWxpYnJhcnkuc2VydmljZS50cyIsIm5nOi8vdGVzdGluZy1saWJyYXJ5L2xpYi90ZXN0aW5nLWxpYnJhcnkuY29tcG9uZW50LnRzIiwibmc6Ly90ZXN0aW5nLWxpYnJhcnkvbGliL3Rlc3RpbmctbGlicmFyeS5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBUZXN0aW5nTGlicmFyeVNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG59XG4iLCJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdOZ3hNYXQtVGVzdGluZ0xpYnJhcnknLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxwPlxuICAgICAgdGVzdGluZy1saWJyYXJ5IHdvcmtzIVxuICAgIDwvcD5cbiAgYCxcbiAgc3R5bGVzOiBbXVxufSlcbmV4cG9ydCBjbGFzcyBUZXN0aW5nTGlicmFyeUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpIHtcbiAgfVxuXG59XG4iLCJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGVzdGluZ0xpYnJhcnlDb21wb25lbnQgfSBmcm9tICcuL3Rlc3RpbmctbGlicmFyeS5jb21wb25lbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1Rlc3RpbmdMaWJyYXJ5Q29tcG9uZW50XSxcbiAgZXhwb3J0czogW1Rlc3RpbmdMaWJyYXJ5Q29tcG9uZW50XVxufSlcbmV4cG9ydCBjbGFzcyBUZXN0aW5nTGlicmFyeU1vZHVsZSB7IH1cbiJdLCJuYW1lcyI6WyJJbmplY3RhYmxlIiwiQ29tcG9uZW50IiwiTmdNb2R1bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtRQU9FO1NBQWlCOztvQkFMbEJBLGFBQVUsU0FBQzt3QkFDVixVQUFVLEVBQUUsTUFBTTtxQkFDbkI7Ozs7O29DQUpEOzs7Ozs7O0FDQUE7UUFhRTtTQUFpQjs7OztRQUVqQiwwQ0FBUTs7O1lBQVI7YUFDQzs7b0JBZEZDLFlBQVMsU0FBQzt3QkFDVCxRQUFRLEVBQUUsdUJBQXVCO3dCQUNqQyxRQUFRLEVBQUUsdURBSVQ7d0JBQ0QsTUFBTSxFQUFFLEVBQUU7cUJBQ1g7Ozs7c0NBVkQ7Ozs7Ozs7QUNBQTs7OztvQkFHQ0MsV0FBUSxTQUFDO3dCQUNSLE9BQU8sRUFBRSxFQUNSO3dCQUNELFlBQVksRUFBRSxDQUFDLHVCQUF1QixDQUFDO3dCQUN2QyxPQUFPLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztxQkFDbkM7O21DQVJEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9